name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [textbook]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # phpのバージョンを上げる
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: dockerコンテナをビルドして起動する
        run: |
          echo DOCKER_UID=`id -u` > .env
          docker-compose build --no-cache
          docker-compose up -d
          docker-compose exec -T --user docker app bash -c 'yes | composer install'
          docker-compose exec -T --user docker app bash -c 'chmod 777 -R storage bootstrap/cache'
      - name: 30秒待つ
        run: |
          sleep 30
      - name: テスト用のdbを準備する
        run: |
          docker-compose exec -T --user docker app bash -c 'composer dump-autoload'
          docker-compose exec -T --user docker app bash -c 'php artisan migrate:fresh --seed'

      - name: unittest用dbを作成する
        run: |
          docker-compose exec -T db bash -c 'echo create database docker_test_db | mysql -u root -proot'
          docker-compose exec -T db bash -c "echo 'GRANT ALL PRIVILEGES ON docker_test_db.* TO docker_db_user' | mysql -u root -proot"

      - name: unittestを実行する
        run: |
          docker-compose exec -T --user docker app bash -c 'vendor/bin/phpunit'
